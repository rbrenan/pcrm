generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  userId    String   @id @unique(map: "user_id_UNIQUE") @db.VarChar(64)
  firstName String?  @db.VarChar(45)
  lastName  String?  @db.VarChar(45)
  email     String?  @db.VarChar(320)
  people    person[]
}

model person {
  personId   Bytes   @id @unique(map: "person_id_UNIQUE") @db.Binary(16)
  userId     String? @db.VarChar(64)
  user       user?   @relation(fields: [userId], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "fk_person_user")
  firstName  String? @db.VarChar(45)
  lastName   String? @db.VarChar(45)
  middleName String? @db.VarChar(45)
  prefixId   Bytes?  @db.Binary(16)
  suffixId   Bytes?  @db.Binary(16)
  prefix     prefix? @relation(fields: [prefixId], references: [prefixId], onDelete: NoAction, onUpdate: NoAction, map: "fk_person_prefix")
  suffix     suffix? @relation(fields: [suffixId], references: [suffixId], onDelete: NoAction, onUpdate: NoAction, map: "fk_person_suffix")

  @@index([prefixId], map: "fk_person_prefix_idx")
  @@index([suffixId], map: "fk_person_suffix_idx")
}

model prefix {
  prefixId Bytes    @id @unique(map: "prefix_id_UNIQUE") @db.Binary(16)
  prefix   String?  @db.VarChar(45)
  people   person[]
}

model suffix {
  suffixId Bytes    @id @unique(map: "suffix_id_UNIQUE") @db.Binary(16)
  suffix   String?  @db.VarChar(45)
  people   person[]
}
